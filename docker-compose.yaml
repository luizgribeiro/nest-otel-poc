# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

version: '3.9'
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

# networks:
#   default:
#     name: opentelemetry-nest
#     driver: bridge

services:
  # ********************
  # Telemetry Components
  # ********************
  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: jaeger
    command:
      - "--memory.max-traces=8000"
      # - "--query.base-path=/jaeger/ui"
      # - "--prometheus.server-url=http://${PROMETHEUS_ADDR}"
      # - "--prometheus.query.normalize-calls=true"
      # - "--prometheus.query.normalize-duration=true"
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    # ports:
    #   - "${JAEGER_SERVICE_PORT}"         # Jaeger UI
    #   - "4317"                           # OTLP gRPC default port

    ports:
      - "16686:16686"
      - "4317"
    # environment:
    #   - METRICS_STORAGE_TYPE=prometheus
    logging: *logging

  # Grafana
  # grafana:
  #   image: grafana/grafana:10.1.2
  #   container_name: grafana
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 100M
  #   environment:
  #     - "GF_INSTALL_PLUGINS=grafana-opensearch-datasource"
  #   volumes:
  #     - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini
  #     - ./src/grafana/provisioning/:/etc/grafana/provisioning/
  #   ports:
  #     - "${GRAFANA_SERVICE_PORT}"
  #   logging: *logging

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.86.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml"]
    volumes:
      - ./config.yaml:/etc/otelcol-config.yml
      # - ./src/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "4317:4317"          # OTLP over gRPC receiver
      - "4318:4318"          # OTLP over HTTP receiver
    depends_on:
      - jaeger
    logging: *logging
    # environment:
    #   - ENVOY_PORT

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.47.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./src/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      #- "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"
      - 9090:9090
    logging: *logging

  # opensearch:
  #   image: opensearchproject/opensearch:latest
  #   container_name: opensearch
  #   environment:
  #     - cluster.name=demo-cluster
  #     - node.name=demo-node
  #     - bootstrap.memory_lock=true
  #     - discovery.type=single-node
  #     - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "DISABLE_INSTALL_DEMO_CONFIG=true"
  #     - "DISABLE_SECURITY_PLUGIN=true"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   ports:
  #     - "9200:9200"
  #   logging: *logging

  # dataprepper:
  #   image: opensearchproject/data-prepper:latest
  #   volumes:
  #     - ./src/opensearch/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
  #     - ./src/opensearch/data-prepper-config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml
  #   ports:
  #     - "21892"
  #   logging: *logging
